services:
  api: &api-config
    image: lms-api:dev
    container_name: lms-api
    environment:
      - APP_NAME=LMS API dev
      - DEBUG=True
      - DATABASE_URL=postgresql+asyncpg://lms:lms@db:5432/lms
      - 'OPENSEARCH_HOSTS=["opensearch:9200"]'
      - SECRET_KEY=secret
    env_file:
      - .env.local
    depends_on:
      db:
        condition: service_healthy
      storage:
        condition: service_healthy
    volumes:
      - ./backend/lms:/app/lms
      - ./backend/alembic.ini:/app/alembic.ini
    user: "app:app"
    ports:
      - "8012:8012"
    command:
      - /bin/sh
      - -c
      - |
        pip install --no-cache-dir taskiq taskiq-fastapi &&
        uvicorn lms.main:app --host 0.0.0.0 --port 8012 --reload
    networks:
      - lms

  worker:
    <<: *api-config
    container_name: lms-worker
    restart: unless-stopped
    ports: []
    depends_on:
      db:
        condition: service_healthy
      storage:
        condition: service_healthy
    volumes:
      - ./backend/lms:/app/lms
    command:
      - /bin/sh
      - -c
      - |
        taskiq worker --max-prefetch 1 --ack-type when_received lms.broker:broker

  redis:
    image: redis:alpine
    container_name: lms-redis
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    networks:
      - lms
    ports:
      - "6379:6379"

  db:
    image: postgres:latest
    container_name: lms-db
    environment:
      POSTGRES_DB: lms
      POSTGRES_USER: lms
      POSTGRES_PASSWORD: lms
      LANG: ko_KR.UTF-8
      LC_ALL: ko_KR.UTF-8
      POSTGRES_INITDB_ARGS: "--locale=ko_KR.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./libs/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    command: >
      bash -c "
        chmod +x /docker-entrypoint-initdb.d/init-db.sh &&
        apt-get update &&
        apt-get install -y locales &&
        echo 'ko_KR.UTF-8 UTF-8' > /etc/locale.gen &&
        locale-gen &&
        update-locale LANG=ko_KR.UTF-8 LC_ALL=ko_KR.UTF-8 &&
        docker-entrypoint.sh postgres
      "
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lms"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - lms

  storage:
    image: minio/minio
    container_name: lms-storage
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - storage_data:/data
      - storage_config:/root/.minio
    environment:
      - MINIO_ROOT_USER=library.manager
      - MINIO_ROOT_PASSWORD=library.manager.dev
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - lms

  storage-init:
    image: minio/mc
    depends_on:
      storage:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set lms-storage http://storage:9000 library.manager library.manager.dev;
      mc mb -p lms-storage/lms;
      mc mb -p lms-storage/lms/static;
      mc mb -p lms-storage/lms/media;
      mc mb -p lms-storage/lms/asset;
      mc anonymous set download lms-storage/lms/static;
      mc anonymous set download lms-storage/lms/media;
      mc anonymous set download lms-storage/lms/asset;
      mc policy set-json /tmp/policy.json lms-storage/lms;
      "
    volumes:
      - ./libs/policy.json:/tmp/policy.json
    networks:
      - lms

  opensearch:
    image: lms-search:dev
    container_name: lms-search
    environment:
      - cluster.name=lms-cluster
      - node.name=lms-node
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ports:
      - "9200:9200"
    networks:
      - lms

volumes:
  postgres_data:
  storage_data:
  storage_config:
  opensearch_data:
  redis_data:
  nats_data:

networks:
  lms:
    external: true
